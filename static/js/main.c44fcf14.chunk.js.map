{"version":3,"sources":["components/create.jsx","components/projectNames.jsx","components/tasksData.jsx","projectsDb.js","components/createTask.jsx","components/header.jsx","components/update.jsx","components/App.jsx","index.js"],"names":["Create","props","useState","id","title","description","project","setProject","handleChange","event","target","name","value","prevProject","className","type","placeholder","aria-label","onChange","e","search","onSearch","data-toggle","data-target","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-describedby","rows","onClick","onAdd","preventDefault","ProjectNames","onDelete","class","width","height","viewBox","fill","xmlns","fill-rule","d","TasksData","style","textDecoration","data","isCompleted","checked","checkValue","for","marginBottom","updateProjects","projects","localStorage","setItem","JSON","stringify","CreateTask","task","setTask","prevTask","Header","backgroundColor","href","Update","alert","setAlert","tasks","updateProject","setUpdateProject","defaultValue","onUpdate","App","curSelectedProj","setSelected","setProjects","setTasks","searchProject","setSearchProject","searchTask","setSearchTask","displayTask","proj","filter","x","prev","handleProjectDelete","newUpdated","window","location","reload","handleCheck","taskID","updated","useEffect","console","log","projs","parse","getItem","ex","getProjects","prevProjects","maxWidth","newProject","lastElementId","length","keyword","toLowerCase","key","update","_projects","projectId","includes","map","projectData","index","display","aria-haspopup","aria-expanded","push","tasksData","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c44fcf14.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction Create(props) {\r\n  const [project, setProject] = useState({\r\n    id: 0,\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    setProject((prevProject) => {\r\n      return {\r\n        ...prevProject,\r\n        [name]: value,\r\n      };\r\n    });\r\n  }\r\n\r\n  function submitProject(event) {\r\n    props.onAdd(project);\r\n    setProject({\r\n      title: \"\",\r\n      description: \"\",\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  function handleSearch(e) {\r\n    const search = e.target.value;\r\n    props.onSearch(search);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"projectHead\">\r\n        <h1 className=\"projectHeadElements\">Projects</h1>\r\n\r\n        <form className=\"form-inline\">\r\n          <input\r\n            className=\"form-control mr-sm-2 projectHeadElements\"\r\n            type=\"search\"\r\n            placeholder=\"Search Projects\"\r\n            aria-label=\"Search\"\r\n            onChange={handleSearch}\r\n          ></input>\r\n        </form>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary projectHeadElements\"\r\n          data-toggle=\"modal\"\r\n          data-target=\"#exampleModal\"\r\n        >\r\n          Add\r\n        </button>\r\n\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"exampleModal\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"exampleModalLabel\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <form>\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                    Create Project\r\n                  </h5>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    data-dismiss=\"modal\"\r\n                    aria-label=\"Close\"\r\n                  >\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n\r\n                <div className=\"modal-body\">\r\n                  <div className=\"mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                      <span\r\n                        className=\"input-group-text\"\r\n                        id=\"inputGroup-sizing-default\"\r\n                      >\r\n                        Title\r\n                      </span>\r\n                    </div>\r\n                    <input\r\n                      name=\"title\"\r\n                      value={project.title}\r\n                      onChange={handleChange}\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      aria-label=\"Sizing example input\"\r\n                      aria-describedby=\"inputGroup-sizing-default\"\r\n                    ></input>\r\n                  </div>\r\n\r\n                  <div className=\"input-group-prepend\">\r\n                    <span className=\"input-group-text\">Description</span>\r\n                  </div>\r\n                  <textarea\r\n                    name=\"description\"\r\n                    value={project.description}\r\n                    onChange={handleChange}\r\n                    rows=\"5\"\r\n                    className=\"form-control\"\r\n                    aria-label=\"With textarea\"\r\n                  ></textarea>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  <button\r\n                    onClick={submitProject}\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary\"\r\n                    data-dismiss=\"modal\"\r\n                  >\r\n                    Create\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Create;\r\n","import React from \"react\";\r\n\r\nfunction ProjectNames(props) {\r\n  function handleClick() {\r\n    props.onClick(props.id);\r\n  }\r\n  function handleDelete() {\r\n    props.onDelete(props.id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"projectBody\">\r\n      <div className=\"projectTitle\">\r\n        <div className=\"projectTitleText\" onClick={handleClick}>\r\n          <h3>{props.title}</h3>\r\n        </div>\r\n        <div>\r\n          <button onClick={handleDelete} type=\"button\" class=\"btn btn-danger\">\r\n            <svg\r\n              width=\"1em\"\r\n              height=\"1em\"\r\n              viewBox=\"0 0 16 16\"\r\n              class=\"bi bi-trash-fill\"\r\n              fill=\"currentColor\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fill-rule=\"evenodd\"\r\n                d=\"M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5a.5.5 0 0 0-1 0v7a.5.5 0 0 0 1 0v-7z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProjectNames;\r\n","import React from \"react\";\r\n\r\nfunction TasksData(props) {\r\n  function handleCheck(e) {\r\n    const checkValue = e.target.checked;\r\n\r\n    props.onChange(props.data.id, checkValue);\r\n  }\r\n  return (\r\n    <div className=\"projectNames\">\r\n      <div className=\"taskItem\">\r\n        <div className=\"taskItemInternal\">\r\n          <div className=\"taskHeading\">\r\n            <h4\r\n              style={{\r\n                textDecoration: props.data.isCompleted ? \"line-through\" : \"\",\r\n              }}\r\n            >\r\n              {props.data.title}\r\n            </h4>\r\n\r\n            <div class=\"form-check form-check-inline\">\r\n              <input\r\n                checked={props.data.isCompleted}\r\n                onChange={handleCheck}\r\n                class=\"form-check-input\"\r\n                type=\"checkbox\"\r\n                id=\"inlineCheckbox1\"\r\n                value=\"option1\"\r\n              ></input>\r\n              <label class=\"form-check-label\" for=\"inlineCheckbox1\">\r\n                Completed\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <p\r\n            style={{\r\n              textDecoration: props.data.isCompleted ? \"line-through\" : \"\",\r\n              marginBottom: 0,\r\n            }}\r\n          >\r\n            {props.data.description}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TasksData;\r\n","function updateProjects(projects) {\r\n  localStorage.setItem(\"projects\", JSON.stringify([...projects]));\r\n}\r\n\r\nfunction getProjects() {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(\"projects\"));\r\n  } catch (ex) {\r\n    return [];\r\n  }\r\n}\r\n\r\nexport { getProjects, updateProjects };\r\n","import React, { useState } from \"react\";\r\n\r\nfunction CreateTask(props) {\r\n  const [task, setTask] = useState({\r\n    id: 0,\r\n    title: \"\",\r\n    description: \"\",\r\n    isCompleted: false,\r\n  });\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n    setTask((prevTask) => {\r\n      return {\r\n        ...prevTask,\r\n        [name]: value,\r\n      };\r\n    });\r\n  }\r\n\r\n  function submitTask(event) {\r\n    props.onAdd(task);\r\n    setTask({\r\n      title: \"\",\r\n      description: \"\",\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"exampleModal1\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog\" role=\"document\">\r\n        <form>\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                Create Tasks\r\n              </h5>\r\n\r\n              <button\r\n                type=\"button\"\r\n                className=\"close\"\r\n                data-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              >\r\n                <span aria-hidden=\"true\">&times;</span>\r\n              </button>\r\n            </div>\r\n\r\n            <div className=\"modal-body\">\r\n              <div className=\"mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span\r\n                    className=\"input-group-text\"\r\n                    id=\"inputGroup-sizing-default\"\r\n                  >\r\n                    Task Title\r\n                  </span>\r\n                </div>\r\n                <input\r\n                  name=\"title\"\r\n                  value={task.title}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  aria-label=\"Sizing example input\"\r\n                  aria-describedby=\"inputGroup-sizing-default\"\r\n                ></input>\r\n              </div>\r\n\r\n              <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">Task Description</span>\r\n              </div>\r\n              <textarea\r\n                name=\"description\"\r\n                value={task.description}\r\n                onChange={handleChange}\r\n                rows=\"5\"\r\n                className=\"form-control\"\r\n                aria-label=\"With textarea\"\r\n              ></textarea>\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-secondary\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                Close\r\n              </button>\r\n              <button\r\n                onClick={submitTask}\r\n                type=\"submit\"\r\n                className=\"btn btn-primary\"\r\n                data-dismiss=\"modal\"\r\n              >\r\n                Create\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateTask;\r\n","import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      <nav\r\n        className=\"navbar navbar-light justify-content-between\"\r\n        style={{ backgroundColor: \"#dcdcdc\" }}\r\n      >\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          <h1 className=\"display-4\">Learning MSA</h1>\r\n        </a>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction Update(props) {\r\n  const [alert, setAlert] = useState(false);\r\n  const [updateProject, setUpdateProject] = useState({\r\n    id: 0,\r\n    title: props.data.title,\r\n    description: props.data.description,\r\n    tasks: props.data.tasks,\r\n  });\r\n\r\n  function handleChange(event) {\r\n    const { name, value } = event.target;\r\n    name === \"title\" && value === \"\" ? setAlert(true) : setAlert(false);\r\n    setUpdateProject((prevProject) => {\r\n      return {\r\n        ...prevProject,\r\n        [name]: value,\r\n      };\r\n    });\r\n  }\r\n\r\n  function submitProject(event) {\r\n    if (updateProject.title === \"\") {\r\n      updateProject.title = props.data.title;\r\n    }\r\n\r\n    props.onUpdate(updateProject);\r\n    setUpdateProject({\r\n      title: \"\",\r\n      description: \"\",\r\n      tasks: props.data.tasks,\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"exampleModal2\"\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"exampleModalLabel\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <form>\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n                  Update Project\r\n                </h5>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  data-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                >\r\n                  <span aria-hidden=\"true\">&times;</span>\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"modal-body\">\r\n                <div className=\"mb-3\">\r\n                  <div className=\"input-group-prepend\">\r\n                    <span\r\n                      className=\"input-group-text\"\r\n                      id=\"inputGroup-sizing-default\"\r\n                    >\r\n                      Project Title\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"titleInput\">\r\n                    <input\r\n                      name=\"title\"\r\n                      defaultValue={props.data.title}\r\n                      onChange={handleChange}\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      aria-label=\"Sizing example input\"\r\n                      aria-describedby=\"inputGroup-sizing-default\"\r\n                    ></input>\r\n                    {alert ? <p>Title can't be empty</p> : \"\"}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">Project Description</span>\r\n                </div>\r\n                <textarea\r\n                  name=\"description\"\r\n                  defaultValue={props.data.description}\r\n                  onChange={handleChange}\r\n                  rows=\"5\"\r\n                  className=\"form-control\"\r\n                  aria-label=\"With textarea\"\r\n                ></textarea>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Close\r\n                </button>\r\n                <button\r\n                  id=\"updateButton\"\r\n                  onClick={submitProject}\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  data-dismiss=\"modal\"\r\n                >\r\n                  Update\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Update;\r\n","import React, { useState, useEffect } from \"react\";\nimport Create from \"./create\";\nimport ProjectNames from \"./projectNames\";\nimport TasksData from \"./tasksData\";\nimport { getProjects, updateProjects } from \"../projectsDb\";\nimport CreateTask from \"./createTask\";\nimport Header from \"./header\";\nimport UpdateProject from \"./update\";\n\nfunction App() {\n  const [curSelectedProj, setSelected] = useState([]);\n  const [projects, setProjects] = useState([]);\n  const [tasks, setTasks] = useState([]);\n  const [searchProject, setSearchProject] = useState(\"\");\n  const [searchTask, setSearchTask] = useState(\"\");\n\n  useEffect(() => {\n    console.log(\"Fetching Project From Local Storage\");\n    const projs = getProjects();\n    if (!projs) return;\n    setProjects((prevProjects) => {\n      return [...projs];\n    });\n  }, []);\n\n  function addProject(newProject) {\n    const arrayCheck = projects.length;\n    let lastElementId = arrayCheck !== 0 ? projects[projects.length - 1].id : 0;\n    // let lastElementId = 0;\n    // if (arrayCheck !== 0) {\n    //   lastElementId = projects[projects.length - 1].id;\n    // }\n    newProject.id = lastElementId + 1;\n    newProject.tasks = [];\n    setProjects((prevProjects) => {\n      return [...prevProjects, newProject];\n    });\n    updateProjects([...projects, newProject]);\n  }\n\n  function addTask(task) {\n    task.id = curSelectedProj.tasks.length + 1;\n    setProjects((prev) => {\n      prev.filter((x) => x.id === curSelectedProj.id)[0].tasks.push(task);\n      return [...prev];\n    });\n    updateProjects([...projects]);\n  }\n\n  function displayTask(id) {\n    const proj = projects.filter((x) => x.id === id)[0];\n    setSelected((prev) => {\n      setTasks(proj.tasks);\n      return proj;\n    });\n  }\n\n  function handleProjectSearch(keyword) {\n    setSearchProject(() => {\n      return keyword.toLowerCase();\n    });\n  }\n\n  function handleTaskSearch(e) {\n    const keyword = e.target.value;\n    setSearchTask(() => {\n      return keyword.toLowerCase();\n    });\n  }\n\n  function handleDelete() {\n    const updated = [...projects];\n    const newUpdated = updated.filter((x) => x.id !== curSelectedProj.id);\n    setProjects((prev) => {\n      return [...newUpdated];\n    });\n    updateProjects([...newUpdated]);\n    window.location.reload();\n  }\n  function handleProjectDelete(id) {\n    const updated = [...projects];\n    const newUpdated = updated.filter((x) => x.id !== id);\n    setProjects((prev) => {\n      return [...newUpdated];\n    });\n    updateProjects([...newUpdated]);\n    window.location.reload();\n  }\n\n  function handleCheck(taskID, checkValue) {\n    const updated = [...projects];\n    updated\n      .filter((x) => x.id === curSelectedProj.id)[0]\n      .tasks.filter((x) => x.id === taskID)[0].isCompleted = checkValue;\n    setProjects((prev) => {\n      return [...updated];\n    });\n    updateProjects([...projects]);\n  }\n\n  function updateProject(update) {\n    update.id = curSelectedProj.id;\n    const _projects = [...projects];\n    const projectId = curSelectedProj.id - 1;\n    _projects[projectId] = update;\n    setProjects(() => {\n      return [..._projects];\n    });\n    updateProjects([..._projects]);\n    window.location.reload();\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"container\" style={{ maxWidth: \"95vw\" }}>\n        <div className=\"row\">\n          <div className=\"col project-main\">\n            <Create onAdd={addProject} onSearch={handleProjectSearch} />\n\n            <UpdateProject\n              key={curSelectedProj.id}\n              onUpdate={updateProject}\n              data={curSelectedProj}\n            />\n\n            {projects\n              .filter((x) =>\n                searchProject.length\n                  ? x.title.toLowerCase().includes(searchProject)\n                  : true\n              )\n              .map((projectData, index) => {\n                return (\n                  <ProjectNames\n                    key={index}\n                    id={projectData.id}\n                    title={projectData.title}\n                    onClick={displayTask}\n                    onDelete={handleProjectDelete}\n                  />\n                );\n              })}\n          </div>\n          <div\n            className=\"col breakdown-main\"\n            style={{ display: curSelectedProj.title ? \"initial\" : \"\" }}\n          >\n            <div className=\"taskHead\">\n              {curSelectedProj.title ? (\n                <div className=\"projectHeadTitle\">\n                  <h2 className=\"taskHeadElements\">Project: </h2>\n                  <h3 className=\"taskHeadElements\">{curSelectedProj.title}</h3>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {curSelectedProj.title ? (\n                <form className=\"form-inline\">\n                  <input\n                    className=\"form-control mr-sm-2 taskHeadElements\"\n                    type=\"search\"\n                    placeholder=\"Search Tasks\"\n                    aria-label=\"Search\"\n                    onChange={handleTaskSearch}\n                  ></input>\n                </form>\n              ) : (\n                \"\"\n              )}\n\n              {curSelectedProj.title ? (\n                <div class=\"btn-group\">\n                  <button\n                    class=\"btn btn-primary btn-sm dropdown-toggle taskHeadElements\"\n                    type=\"button\"\n                    data-toggle=\"dropdown\"\n                    aria-haspopup=\"true\"\n                    aria-expanded=\"false\"\n                  >\n                    Options\n                  </button>\n                  <div class=\"dropdown-menu\">\n                    <buttom\n                      class=\"dropdown-item update-button\"\n                      id=\"update\"\n                      data-toggle=\"modal\"\n                      data-target=\"#exampleModal2\"\n                      // onClick={handleUpdate}\n                    >\n                      Update Project\n                    </buttom>\n\n                    <buttom\n                      class=\"btn btn-danger dropdown-item \"\n                      onClick={handleDelete}\n                    >\n                      Delete Project\n                    </buttom>\n                  </div>\n                </div>\n              ) : (\n                \"\"\n              )}\n\n              {curSelectedProj.title ? (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-primary taskHeadElements\"\n                  data-toggle=\"modal\"\n                  data-target=\"#exampleModal1\"\n                >\n                  Add Task\n                </button>\n              ) : (\n                \"\"\n              )}\n            </div>\n            <div className=\"taskBody\">\n              <h5>\n                {curSelectedProj.description\n                  ? \"Description: \" + curSelectedProj.description\n                  : \"\"}\n              </h5>\n              <CreateTask onAdd={addTask} />\n              <h3>Tasks:</h3>\n              {tasks\n                .filter((x) =>\n                  searchTask.length\n                    ? x.title.toLowerCase().includes(searchTask)\n                    : true\n                )\n                .map((tasksData, index) => {\n                  return (\n                    <TasksData\n                      key={index}\n                      data={tasksData}\n                      onChange={handleCheck}\n                    />\n                  );\n                })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render( <App / > , document.getElementById('root'));"],"sourceRoot":""}